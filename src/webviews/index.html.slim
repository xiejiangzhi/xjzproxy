
h1 XJZ Proxy

- each_with_host do |host, list|
  strong = host
  ul
    - list.each do |req_tracker|
      - req = req_tracker.request
      - res = req_tracker.response

      li 
        pre
          code
            span = req.http_method
            span = " #{req.url} #{req.protocol}"
            span = " #{req_tracker.action_list[0][1].first.strftime("%H:%M:%S")}"

        strong Request Header

        table
          tbody
            - req.proxy_headers.each do |k, v|
              tr
                td = k
                td = v

        - if res
          br
          strong Response Header #{req.protocol}
          table
            tbody
              - headers = (req.protocol == 'http/1.1') ? res.h1_headers : res.h2_headers
              - headers.each do |k, v|
                tr
                  td = k
                  td = v

          strong time cost: #{req_tracker.seconds * 1000} ms

