- h_header = '56px'
- errors = ap.errors

.row
  .col-12.detail.pt-3.pb-5[
    data-spy='scroll' data-target='#project_detail_toc' data-offset='18'
    style='height: calc(100vh - #{h_header}); overflow-y: auto; overflow-x: hidden; position: relative;"
  '
  ]
    - if errors.present?
      .container
        strong.row.text-danger Errors
        - errors.each do |err|
          .row.text-danger
            .col-6 = err[:full_path]
            .col-6
              | is not 
              = err[:message]
    - else
      ruby:
        ap.cache[:doc_markdown] ||= Xjz::ApiProject::DocRenderer.new(ap).render('md', header: false)
        doc_html = ap.cache[:doc_html] ||= Redcarpet::Markdown.new(
          Xjz::ProjectRender::HTML.new(with_toc_data: true),
          autolink: true, tables: true, fenced_code_blocks: true
        ).render(ap.cache[:doc_markdown]) \
          .gsub('<h3', '<h3 class="top-title text-info text-center"') \
          .gsub('<h4', '<h4 class="sub-title"') \
            .gsub(/<br tid='api_res_(\d+)_(\w+)'[^>]+>/) do |str|
              html = "<input type='radio' name='api_res_#{$1}' value='#{$2}'"
              res = ap.data.dig('apis', $1.to_i, 'response')
              html << " checked" if $2 == (res['.default'] || 'success')
              html << " class='api_res_radio'"
              html << " xjz-id='project.#{ap.object_id}.choose_api_res.#{$1}'"
              html << " />"
            end

      .custom-control.custom-switch
        - id = "project_status_switch-#{ap.object_id}"
        - xid = "project.status_switch.#{ap.object_id}"
        - checked = ap.data['.enabled'] != false
        input.custom-control-input type="checkbox" checked=checked id=id xjz-id=xid
        label.custom-control-label for=id Enable Project

      == doc_html
