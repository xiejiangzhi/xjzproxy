- h_header = '56px'
- errors = ap.errors

.row
  .col-12.detail.pt-3.pb-5[
    data-spy='scroll' data-target='#project_detail_toc' data-offset='18'
    style='height: calc(100vh - #{h_header}); overflow-y: auto; overflow-x: hidden; position: relative;"
  '
  ]
    - if errors.present?
      .container
        strong.row.text-danger Errors
        - errors.each do |err|
          .row.text-danger
            .col-6 = err[:full_path]
            .col-6
              | is not 
              = err[:message]
    - else
      ruby:
        ap.cache[:doc_markdown] ||= Xjz::ApiProject::DocRenderer.new(ap).render('md', header: false)
        doc_html = ap.cache[:doc_html] ||= Redcarpet::Markdown.new(
          Xjz::ProjectRender::HTML.new(with_toc_data: true),
          autolink: true, tables: true, fenced_code_blocks: true
        ).render(ap.cache[:doc_markdown]) \
          .gsub('<h3', '<h3 class="top-title text-info text-center"') \
          .gsub('<h4', '<h4 class="sub-title"')
        
        doc_html = doc_html.gsub(/<br tid='api_res_(\d+)_(\w+)'[^>]+>/) do |str|
          html = "<input type='radio' name='api_res_#{$1}' value='#{$2}'"
          res = ap.data.dig('apis', $1.to_i, 'response')
          html << " checked" if $2 == (res['.default'] || 'success')
          html << " class='api_res_radio'"
          html << " xjz-id='project.#{ap.object_id}.choose_api_res.#{$1}'"
          html << " />"
        end

      .row.px-3
        .col-5.multiple-switch
          ruby:
            statuses = {
              disable: "Forward request only, don't save history",
              watch: "Parse request/response. And compare it to the document definition",
              mock: "Parse request and mock response. Also compare it to the document definition"
            }.stringify_keys!

          .row
            - statuses.each do |name, desc|
              - id = "project_mode_switch-#{ap.object_id}-#{name}"
              - xid = "project.mode.#{ap.object_id}"
              - checked = ap.data['.mode'] || 'mock'
              label.col-4.text-center for=id title=desc data-toggle='tooltip'
                input[
                  type="radio" id=id xjz-id=xid value=name
                  name="project_mode-#{ap.object_id}" checked=(ap.data['.mode'] == name)
                ]
                br
                = name.titleize

        .ml-auto
          button.btn.btn-primary xjz-id='project.export.html.#{ap.object_id}' Export Document
          button.btn.btn-info.ml-1 xjz-id='project.opendir.#{ap.object_id}' Show Folder


      == doc_html
