---
project:
  host: xjz\.pw
  desc: desc

types:
  status:
    items: [pending, confirmed, finished]
  avatar:
    items: ["/path/to/%{i}.png"]
    prefix: https://xxx.com

partials:
  simple_user:
    id: .t/integer
    nickname: .t/string
    avatar: .t/avatar

  user:
    .*: .p/simple_user
    posts: .p/post * 3
    .posts.desc: a list of post

  post:
    id: .t/integer
    title: a post title
    body: .t/text

responses:
  invalid_token:
    http_code: 400
    desc: 'xxx'
    data:
      code: 1
      msg: Invalid token

  show_user:
    http_code: 200
    desc: 'xxx'
    data: .p/user

  show_post:
    http_code: 200
    desc: 'hello'
    data:
      id: .t/integer
      user: .p/user
      status: .t/status

  list_users:
    http_code: 200
    data:
      items: .p/user * 2
      .items.desc: a array of user
      total: .t/integer
      .total.desc: val

apis:
  - title: Get all users
    desc: more desc of this API
    method: GET
    path: /api/v1/users
    labels: ['auth']
    query:
      page: 1
      .page.optional: true
      q: 123
      status: .t/integer
      .status.optional.unless: q
      .status.rejected.if: q

    response:
      success: .r/list_users
      r2:
        http_code: 200
        data:
          items: .p/user * 2
          total: .t/integer
      r3:
        data:
          items: .p/user * 2
          .items.desc: some desc
          total: .t/integer
          .total.desc: some desc
      error: .r/invalid_token

  - title: Get user
    desc: show a user's info
    enabled: true
    method: get
    path: /api/v1/users/\d+
    labels: ['auth']
    query:
    response:
      success: .r/show_user
      error: .r/invalid_token

plugins:
  auth:
    filter:
      include_labels: [all]
      exclude_labels: [no_auth]
      path: /api/v1
      methods:
        - GET
        - POST
    query:
    body:
    params:
      token: .t/string
      .token.required: true
    headers:

  other:
    filter:
      include_labels: [all]
      path: /api/v1
    script: .f/test.rb

