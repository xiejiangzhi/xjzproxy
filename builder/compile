#! /usr/bin/env ruby

require 'zlib'

app_dir = File.expand_path('../../', __FILE__)
rbdata = {}

def compile(path)
  code = File.read(path)
  code = code.lines.each_with_object([]) do |line, r|
    next if line =~ /^\s*(#.*)?$/
    r << line
    line.gsub!(/^\s+/, '')
  end.join

  RubyVM::InstructionSequence.compile(
    code, path, path
  ).to_binary
end

Dir.chdir(app_dir) do
  Dir[*%w{*.rb src/xjz/**/*.rb}].each do |path|
    rbdata[path] = compile(path)
  end
  puts "Compiled Ruby Code"

  Dir[*%w{src/static/**/* src/webviews/**/*}].each do |path|
    next if File.directory?(path)
    rbdata[path] = File.read(path)
  end
  puts "Saved JS and Templates"
end

data = rbdata.map do |k, v|
  is_utf8 = v.encoding == Encoding::UTF_8 ? 1 : 0
  [
    [1, k.bytesize].pack("CN"), k,
    [is_utf8, v.bytesize].pack("CN"), v.force_encoding('binary')
  ].join
end.join

out_path = File.join(app_dir, 'data')
n = 9 + rand(128)
data = [
  [n].pack('C'),
  Random.bytes(n),
  Zlib::Deflate.deflate(data),
  Random.bytes(n)
].join
File.write(out_path, data)

puts "Output #{out_path}"
puts 'Done'
